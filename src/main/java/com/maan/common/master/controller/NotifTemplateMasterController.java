/*
*  Copyright (c) 2019. All right reserved
* Created on 2021-11-19 ( Date ISO 2021-11-19 - Time 13:16:48 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.common.master.controller;

import java.util.List;
import com.maan.common.error.Error;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.common.bean.NotifTemplateMaster;
import com.maan.common.error.CommonValidationException;
import com.maan.common.master.request.NotifTemplateMasterReq;
import com.maan.common.master.response.NotifTemplateMasterRes;
import com.maan.common.master.response.sucessRes;
import com.maan.common.master.service.NotifTemplateMasterService;
import com.maan.common.master.service.PrintReqService;


/**
* <h2>NotifTemplateMasterController</h2>
*/
@RestController
@RequestMapping("/api")
public class NotifTemplateMasterController {

	@Autowired
	private  NotifTemplateMasterService entityService;
	
	@Autowired
	private  PrintReqService dateformat;

    @PostMapping(value = "/getenotiftemplatemaster")
	public ResponseEntity<List<NotifTemplateMasterRes>> getenotiftemplatemaster(@RequestBody  NotifTemplateMasterReq req) {

    	dateformat.reqPrint(req);
    	
    	List<NotifTemplateMasterRes> data = entityService.getenotiftemplatemaster(req);
    		if (data != null) {
    			return new ResponseEntity<List<NotifTemplateMasterRes>>(data,HttpStatus.CREATED);
  			  } else {
    			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
   			 }
    }
    
    @PostMapping(value = "/notiftemplatemasterid")
	public ResponseEntity<NotifTemplateMasterRes> notiftemplatemasterid(@RequestBody NotifTemplateMasterReq req) {

    	dateformat.reqPrint(req);
    	
		NotifTemplateMasterRes data = entityService.notiftemplatemasterid(req);
		if (data != null) {
			return new ResponseEntity<NotifTemplateMasterRes>(data, HttpStatus.CREATED);
		} else {
			return new ResponseEntity<>(null, HttpStatus.BAD_REQUEST);
		}
	}
    
    @PostMapping(value = "/insertnotiftemplatemaster")
	public ResponseEntity<sucessRes> insertnotiftemplatemaster(@RequestBody  NotifTemplateMasterReq req) throws CommonValidationException {
		
		dateformat.reqPrint(req);
		
	     List<Error> error = entityService.validation(req);
		if (error != null && error.size() > 0)
			throw new CommonValidationException(error, null);
		
		sucessRes data = entityService.insertnotiftemplatemaster(req);
    		if (data != null) {
    			return new ResponseEntity<sucessRes>(data,HttpStatus.CREATED);
  			  } else {
    			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
   			 }
    }

}
