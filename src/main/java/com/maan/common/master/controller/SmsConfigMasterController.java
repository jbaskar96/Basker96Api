/*
*  Copyright (c) 2019. All right reserved
* Created on 2021-11-19 ( Date ISO 2021-11-19 - Time 13:16:53 )
* Generated by Telosys Tools Generator ( version 3.3.0 )
*/
package com.maan.common.master.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.maan.common.bean.SmsConfigMaster;
import com.maan.common.error.CommonValidationException;
import com.maan.common.error.Error;
import com.maan.common.master.request.SmsConfigMasterReq;
import com.maan.common.master.response.SmsConfigMasterRes;
import com.maan.common.master.response.sucessRes;
import com.maan.common.master.service.PrintReqService;
import com.maan.common.master.service.SmsConfigMasterService;


/**
* <h2>SmsConfigMasterController</h2>
*/
@RestController
@RequestMapping("/api")
public class SmsConfigMasterController {

	@Autowired
	private  SmsConfigMasterService entityService;
	
	@Autowired
	private  PrintReqService dateformat;
	
	@PostMapping(value = "/getsmsconfigmaster")
	public ResponseEntity<List<SmsConfigMasterRes>> getsmsconfigmaster(@RequestBody  SmsConfigMasterReq req) {

		dateformat.reqPrint(req);
		
   		 List<SmsConfigMasterRes> data = entityService.getsmsconfigmaster(req);
    		if (data != null) {
    			return new ResponseEntity<List<SmsConfigMasterRes>>(data,HttpStatus.CREATED);
  			  } else {
    			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
   			 }
    }
	@PostMapping(value = "/getsmsconfigmasterid")
	public ResponseEntity<SmsConfigMasterRes> getsmsconfigmasterid(@RequestBody  SmsConfigMasterReq req) {

		dateformat.reqPrint(req);
		
   		 SmsConfigMasterRes data = entityService.getsmsconfigmasterid(req);
    		if (data != null) {
    			return new ResponseEntity<SmsConfigMasterRes>(data,HttpStatus.CREATED);
  			  } else {
    			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
   			 }
    }
	@PostMapping(value = "/insertsmsconfigmaster")
	public ResponseEntity<sucessRes> insertsmsconfigmaster(@RequestBody  SmsConfigMasterReq req) throws CommonValidationException {

		dateformat.reqPrint(req);
		
	    List<Error> error = entityService.validation(req);
		if (error != null && error.size() > 0)
			throw new CommonValidationException(error, null);
		
		sucessRes data = entityService.insertsmsconfigmaster(req);
    		if (data != null) {
    			return new ResponseEntity<sucessRes>(data,HttpStatus.CREATED);
  			  } else {
    			return new ResponseEntity<>(null,HttpStatus.BAD_REQUEST);
   			 }
    }

}
